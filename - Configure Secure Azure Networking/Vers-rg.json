{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "routeTables_RT1_name": {
      "type": "String"
    },
    "routeTables_RT2_name": {
      "type": "String"
    },
    "virtualMachines_VM1_name": {
      "type": "String"
    },
    "virtualMachines_VM2_name": {
      "type": "String"
    },
    "virtualMachines_VM3_name": {
      "type": "String"
    },
    "virtualNetworks_VNet1_name": {
      "type": "String"
    },
    "virtualNetworks_VNet2_name": {
      "type": "String"
    },
    "virtualNetworks_VNet3_name": {
      "type": "String"
    },
    "virtualNetworks_VNet4_name": {
      "type": "String"
    },
    "azureFirewalls_AzureFW_name": {
      "type": "String"
    },
    "networkInterfaces_vm1363_name": {
      "type": "String"
    },
    "networkInterfaces_vm2834_name": {
      "type": "String"
    },
    "networkInterfaces_vm3629_name": {
      "type": "String"
    },
    "publicIPAddresses_FW1PiP_name": {
      "type": "String"
    },
    "publicIPAddresses_VM1PiP_name": {
      "type": "String"
    },
    "publicIPAddresses_VM2PiP_name": {
      "type": "String"
    },
    "publicIPAddresses_VM3PiP_name": {
      "type": "String"
    },
    "privateDnsZones_devforks_com_name": {
      "type": "String"
    },
    "applicationSecurityGroups_ASG_name": {
      "type": "String"
    },
    "networkSecurityGroups_VM1_nsg_name": {
      "type": "String"
    },
    "networkSecurityGroups_VM2_nsg_name": {
      "type": "String"
    },
    "networkSecurityGroups_VM3_nsg_name": {
      "type": "String"
    },
    "storageAccounts_testingcontainer_name": {
      "type": "String"
    },
    "firewallPolicies_FWPreminumPolicy_name": {
      "type": "String"
    },
    "networkSecurityGroups_Subnet1_NSG_name": {
      "type": "String"
    },
    "schedules_shutdown_computevm_vm1_name": {
      "type": "String"
    },
    "schedules_shutdown_computevm_vm2_name": {
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Network/applicationSecurityGroups",
      "apiVersion": "2023-06-01",
      "name": "[parameters('applicationSecurityGroups_ASG_name')]",
      "location": "eastus",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/firewallPolicies",
      "apiVersion": "2023-06-01",
      "name": "[parameters('firewallPolicies_FWPreminumPolicy_name')]",
      "location": "eastus",
      "properties": {
        "sku": {
          "tier": "Premium"
        },
        "threatIntelMode": "Alert",
        "intrusionDetection": {
          "mode": "Off"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-06-01",
      "name": "[parameters('networkSecurityGroups_VM1_nsg_name')]",
      "location": "eastus",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_VM1_nsg_name'), 'RDP')]",
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-06-01",
      "name": "[parameters('networkSecurityGroups_VM2_nsg_name')]",
      "location": "eastus",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_VM2_nsg_name'), 'RDP')]",
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-06-01",
      "name": "[parameters('networkSecurityGroups_VM3_nsg_name')]",
      "location": "westus",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_VM3_nsg_name'), 'RDP')]",
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "[parameters('privateDnsZones_devforks_com_name')]",
      "location": "global",
      "properties": {
        "maxNumberOfRecordSets": 25000,
        "maxNumberOfVirtualNetworkLinks": 1000,
        "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
        "numberOfRecordSets": 3,
        "numberOfVirtualNetworkLinks": 3,
        "numberOfVirtualNetworkLinksWithRegistration": 3,
        "provisioningState": "Succeeded"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-06-01",
      "name": "[parameters('publicIPAddresses_FW1PiP_name')]",
      "location": "eastus",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "ipAddress": "40.121.13.6",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-06-01",
      "name": "[parameters('publicIPAddresses_VM1PiP_name')]",
      "location": "eastus",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "ipAddress": "40.85.167.77",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": [],
        "ddosSettings": {
          "protectionMode": "VirtualNetworkInherited"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-06-01",
      "name": "[parameters('publicIPAddresses_VM2PiP_name')]",
      "location": "eastus",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1",
        "2",
        "3"
      ],
      "properties": {
        "ipAddress": "172.212.23.231",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-06-01",
      "name": "[parameters('publicIPAddresses_VM3PiP_name')]",
      "location": "westus",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "ipAddress": "13.93.194.113",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2023-06-01",
      "name": "[parameters('routeTables_RT1_name')]",
      "location": "eastus",
      "properties": {
        "disableBgpRoutePropagation": false,
        "routes": [
          {
            "name": "FW-Route",
            "id": "[resourceId('Microsoft.Network/routeTables/routes', parameters('routeTables_RT1_name'), 'FW-Route')]",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.1.0.4",
              "hasBgpOverride": false
            },
            "type": "Microsoft.Network/routeTables/routes"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2023-06-01",
      "name": "[parameters('routeTables_RT2_name')]",
      "location": "westus",
      "properties": {
        "disableBgpRoutePropagation": false,
        "routes": [
          {
            "name": "FW-Route",
            "id": "[resourceId('Microsoft.Network/routeTables/routes', parameters('routeTables_RT2_name'), 'FW-Route')]",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.1.0.4",
              "hasBgpOverride": false
            },
            "type": "Microsoft.Network/routeTables/routes"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-06-01",
      "name": "[parameters('virtualNetworks_VNet4_name')]",
      "location": "westus2",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.4.0.0/16"
          ]
        },
        "encryption": {
          "enabled": false,
          "enforcement": "AllowUnencrypted"
        },
        "subnets": [
          {
            "name": "Subnet4",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet4_name'), 'Subnet4')]",
            "properties": {
              "addressPrefixes": [
                "10.4.1.0/24"
              ],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccounts_testingcontainer_name')]",
      "location": "eastus",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "properties": {
        "allowCrossTenantReplication": false,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[parameters('virtualMachines_VM1_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm1363_name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter-azure-edition",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_VM1_name'), '_OsDisk_1_8f0959957bb1493292dff18d2ede4208')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_VM1_name'), '_OsDisk_1_8f0959957bb1493292dff18d2ede4208'))]"
            },
            "deleteOption": "Delete"
          },
          "dataDisks": [],
          "diskControllerType": "SCSI"
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_VM1_name')]",
          "adminUsername": "kholding",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault",
              "enableHotpatching": false
            },
            "enableVMAgentPlatformUpdates": false
          },
          "secrets": [],
          "allowExtensionOperations": true,
          "requireGuestProvisionSignal": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm1363_name'))]",
              "properties": {
                "deleteOption": "Detach"
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[parameters('virtualMachines_VM2_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm2834_name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter-azure-edition",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_VM2_name'), '_OsDisk_1_15a31291e643426fb53f46e95fedf35b')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_VM2_name'), '_OsDisk_1_15a31291e643426fb53f46e95fedf35b'))]"
            },
            "deleteOption": "Delete"
          },
          "dataDisks": [],
          "diskControllerType": "SCSI"
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_VM2_name')]",
          "adminUsername": "kholding",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault",
              "enableHotpatching": false
            },
            "enableVMAgentPlatformUpdates": false
          },
          "secrets": [],
          "allowExtensionOperations": true,
          "requireGuestProvisionSignal": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm2834_name'))]",
              "properties": {
                "deleteOption": "Detach"
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[parameters('virtualMachines_VM3_name')]",
      "location": "westus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm3629_name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter-smalldisk-g2",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_VM3_name'), '_OsDisk_1_948c2bb96246415a8a8ef361f2fad196')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_VM3_name'), '_OsDisk_1_948c2bb96246415a8a8ef361f2fad196'))]"
            },
            "deleteOption": "Delete"
          },
          "dataDisks": [],
          "diskControllerType": "SCSI"
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_VM3_name')]",
          "adminUsername": "kholding",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault",
              "enableHotpatching": false
            },
            "enableVMAgentPlatformUpdates": false
          },
          "secrets": [],
          "allowExtensionOperations": true,
          "requireGuestProvisionSignal": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm3629_name'))]",
              "properties": {
                "deleteOption": "Detach"
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      }
    },
    {
      "type": "microsoft.devtestlab/schedules",
      "apiVersion": "2018-09-15",
      "name": "[parameters('schedules_shutdown_computevm_vm1_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_VM1_name'))]"
      ],
      "properties": {
        "status": "Enabled",
        "taskType": "ComputeVmShutdownTask",
        "dailyRecurrence": {
          "time": "1900"
        },
        "timeZoneId": "UTC",
        "notificationSettings": {
          "status": "Enabled",
          "timeInMinutes": 30,
          "emailRecipient": "kevin@practiceautomations.com",
          "notificationLocale": "en"
        },
        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_VM1_name'))]"
      }
    },
    {
      "type": "microsoft.devtestlab/schedules",
      "apiVersion": "2018-09-15",
      "name": "[parameters('schedules_shutdown_computevm_vm2_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_VM2_name'))]"
      ],
      "properties": {
        "status": "Enabled",
        "taskType": "ComputeVmShutdownTask",
        "dailyRecurrence": {
          "time": "1900"
        },
        "timeZoneId": "UTC",
        "notificationSettings": {
          "status": "Enabled",
          "timeInMinutes": 30,
          "emailRecipient": "kevin@practiceautomations.com",
          "notificationLocale": "en"
        },
        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_VM2_name'))]"
      }
    },
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('firewallPolicies_FWPreminumPolicy_name'), '/DefaultNetworkRuleCollectionGroup')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_FWPreminumPolicy_name'))]"
      ],
      "properties": {
        "priority": 200,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "action": {
              "type": "Allow"
            },
            "rules": [],
            "name": "NetworkRuleCollection",
            "priority": 100
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-06-01",
      "name": "[parameters('networkSecurityGroups_Subnet1_NSG_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_name'))]"
      ],
      "properties": {
        "securityRules": [
          {
            "name": "AllowSQL",
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_Subnet1_NSG_name'), 'AllowSQL')]",
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "1433",
              "destinationAddressPrefix": "10.1.1.0/24",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": [],
              "sourceApplicationSecurityGroups": [
                {
                  "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_name'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('networkSecurityGroups_VM1_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VM1_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('networkSecurityGroups_VM2_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VM2_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('networkSecurityGroups_VM3_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VM3_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/A",
      "apiVersion": "2018-09-01",
      "name": "[concat(parameters('privateDnsZones_devforks_com_name'), '/gsa-94dd59c8-d938000001')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_devforks_com_name'))]"
      ],
      "properties": {
        "ttl": 10,
        "aRecords": [
          {
            "ipv4Address": "10.1.0.6"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/A",
      "apiVersion": "2018-09-01",
      "name": "[concat(parameters('privateDnsZones_devforks_com_name'), '/gsa-94dd59c8-d938000002')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_devforks_com_name'))]"
      ],
      "properties": {
        "ttl": 10,
        "aRecords": [
          {
            "ipv4Address": "10.1.0.7"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/SOA",
      "apiVersion": "2018-09-01",
      "name": "[concat(parameters('privateDnsZones_devforks_com_name'), '/@')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_devforks_com_name'))]"
      ],
      "properties": {
        "ttl": 3600,
        "soaRecord": {
          "email": "azureprivatedns-host.microsoft.com",
          "expireTime": 2419200,
          "host": "azureprivatedns.net",
          "minimumTtl": 10,
          "refreshTime": 3600,
          "retryTime": 300,
          "serialNumber": 1
        }
      }
    },
    {
      "type": "Microsoft.Network/routeTables/routes",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('routeTables_RT1_name'), '/FW-Route')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT1_name'))]"
      ],
      "properties": {
        "addressPrefix": "0.0.0.0/0",
        "nextHopType": "VirtualAppliance",
        "nextHopIpAddress": "10.1.0.4",
        "hasBgpOverride": false
      }
    },
    {
      "type": "Microsoft.Network/routeTables/routes",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('routeTables_RT2_name'), '/FW-Route')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT2_name'))]"
      ],
      "properties": {
        "addressPrefix": "0.0.0.0/0",
        "nextHopType": "VirtualAppliance",
        "nextHopIpAddress": "10.1.0.4",
        "hasBgpOverride": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('virtualNetworks_VNet1_name'), '/AzureFirewallSubnet')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.1.0.0/24",
        "serviceEndpoints": [],
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('virtualNetworks_VNet4_name'), '/Subnet4')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet4_name'))]"
      ],
      "properties": {
        "addressPrefixes": [
          "10.4.1.0/24"
        ],
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccounts_testingcontainer_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testingcontainer_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "allowPermanentDelete": false,
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccounts_testingcontainer_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testingcontainer_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "protocolSettings": {
          "smb": {}
        },
        "cors": {
          "corsRules": []
        },
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccounts_testingcontainer_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testingcontainer_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccounts_testingcontainer_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testingcontainer_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('networkSecurityGroups_Subnet1_NSG_name'), '/AllowSQL')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Subnet1_NSG_name'))]",
        "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "1433",
        "destinationAddressPrefix": "10.1.1.0/24",
        "access": "Allow",
        "priority": 100,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": [],
        "sourceApplicationSecurityGroups": [
          {
            "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_name'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[concat(parameters('privateDnsZones_devforks_com_name'), '/vnet1-dns')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_devforks_com_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
      ],
      "properties": {
        "registrationEnabled": true,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[concat(parameters('privateDnsZones_devforks_com_name'), '/vnet2-dns')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_devforks_com_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
      ],
      "properties": {
        "registrationEnabled": true,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[concat(parameters('privateDnsZones_devforks_com_name'), '/vnet3-dns')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_devforks_com_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet3_name'))]"
      ],
      "properties": {
        "registrationEnabled": true,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet3_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-06-01",
      "name": "[parameters('virtualNetworks_VNet2_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT1_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.2.0.0/16"
          ]
        },
        "encryption": {
          "enabled": false,
          "enforcement": "AllowUnencrypted"
        },
        "subnets": [
          {
            "name": "Subnet2",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'Subnet2')]",
            "properties": {
              "addressPrefixes": [
                "10.2.1.0/24"
              ],
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT1_name'))]"
              },
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ],
        "virtualNetworkPeerings": [
          {
            "name": "[concat(parameters('virtualNetworks_VNet2_name'), '-to-VNet1')]",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_VNet2_name'), concat(parameters('virtualNetworks_VNet2_name'), '-to-VNet1'))]",
            "properties": {
              "peeringState": "Connected",
              "peeringSyncLevel": "FullyInSync",
              "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
              },
              "allowVirtualNetworkAccess": true,
              "allowForwardedTraffic": false,
              "allowGatewayTransit": false,
              "useRemoteGateways": false,
              "doNotVerifyRemoteGateways": false,
              "remoteAddressSpace": {
                "addressPrefixes": [
                  "10.1.0.0/16"
                ]
              },
              "remoteVirtualNetworkAddressSpace": {
                "addressPrefixes": [
                  "10.1.0.0/16"
                ]
              }
            },
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
          }
        ],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-06-01",
      "name": "[parameters('virtualNetworks_VNet3_name')]",
      "location": "westus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT2_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.3.0.0/16"
          ]
        },
        "encryption": {
          "enabled": false,
          "enforcement": "AllowUnencrypted"
        },
        "subnets": [
          {
            "name": "Subnet3",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet3_name'), 'Subnet3')]",
            "properties": {
              "addressPrefixes": [
                "10.3.1.0/24"
              ],
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT2_name'))]"
              },
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ],
        "virtualNetworkPeerings": [
          {
            "name": "[concat(parameters('virtualNetworks_VNet3_name'), '-to-VNet1')]",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_VNet3_name'), concat(parameters('virtualNetworks_VNet3_name'), '-to-VNet1'))]",
            "properties": {
              "peeringState": "Connected",
              "peeringSyncLevel": "FullyInSync",
              "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
              },
              "allowVirtualNetworkAccess": true,
              "allowForwardedTraffic": false,
              "allowGatewayTransit": false,
              "useRemoteGateways": false,
              "doNotVerifyRemoteGateways": false,
              "remoteAddressSpace": {
                "addressPrefixes": [
                  "10.1.0.0/16"
                ]
              },
              "remoteVirtualNetworkAddressSpace": {
                "addressPrefixes": [
                  "10.1.0.0/16"
                ]
              }
            },
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
          }
        ],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('virtualNetworks_VNet2_name'), '/Subnet2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]",
        "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT1_name'))]"
      ],
      "properties": {
        "addressPrefixes": [
          "10.2.1.0/24"
        ],
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT1_name'))]"
        },
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('virtualNetworks_VNet3_name'), '/Subnet3')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet3_name'))]",
        "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT2_name'))]"
      ],
      "properties": {
        "addressPrefixes": [
          "10.3.1.0/24"
        ],
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT2_name'))]"
        },
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('virtualNetworks_VNet1_name'), '/', parameters('virtualNetworks_VNet1_name'), '-to-', parameters('virtualNetworks_VNet1_name'), '3')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet3_name'))]"
      ],
      "properties": {
        "peeringState": "Connected",
        "peeringSyncLevel": "FullyInSync",
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet3_name'))]"
        },
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "doNotVerifyRemoteGateways": false,
        "remoteAddressSpace": {
          "addressPrefixes": [
            "10.3.0.0/16"
          ]
        },
        "remoteVirtualNetworkAddressSpace": {
          "addressPrefixes": [
            "10.3.0.0/16"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('virtualNetworks_VNet1_name'), '/', parameters('virtualNetworks_VNet1_name'), '-to-VNet2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
      ],
      "properties": {
        "peeringState": "Connected",
        "peeringSyncLevel": "FullyInSync",
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
        },
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "doNotVerifyRemoteGateways": false,
        "remoteAddressSpace": {
          "addressPrefixes": [
            "10.2.0.0/16"
          ]
        },
        "remoteVirtualNetworkAddressSpace": {
          "addressPrefixes": [
            "10.2.0.0/16"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('virtualNetworks_VNet2_name'), '/', parameters('virtualNetworks_VNet2_name'), '-to-VNet1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
      ],
      "properties": {
        "peeringState": "Connected",
        "peeringSyncLevel": "FullyInSync",
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
        },
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "doNotVerifyRemoteGateways": false,
        "remoteAddressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        },
        "remoteVirtualNetworkAddressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('virtualNetworks_VNet3_name'), '/', parameters('virtualNetworks_VNet3_name'), '-to-VNet1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet3_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
      ],
      "properties": {
        "peeringState": "Connected",
        "peeringSyncLevel": "FullyInSync",
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
        },
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "doNotVerifyRemoteGateways": false,
        "remoteAddressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        },
        "remoteVirtualNetworkAddressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccounts_testingcontainer_name'), '/default/scripts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_testingcontainer_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testingcontainer_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Network/azureFirewalls",
      "apiVersion": "2023-06-01",
      "name": "[parameters('azureFirewalls_AzureFW_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_FW1PiP_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet1_name'), 'AzureFirewallSubnet')]",
        "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_FWPreminumPolicy_name'))]"
      ],
      "properties": {
        "sku": {
          "name": "AZFW_VNet",
          "tier": "Premium"
        },
        "threatIntelMode": "Alert",
        "additionalProperties": {},
        "ipConfigurations": [
          {
            "name": "FW1PiP",
            "id": "[concat(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewalls_AzureFW_name')), '/azureFirewallIpConfigurations/FW1PiP')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_FW1PiP_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet1_name'), 'AzureFirewallSubnet')]"
              }
            }
          }
        ],
        "networkRuleCollections": [],
        "applicationRuleCollections": [],
        "natRuleCollections": [],
        "firewallPolicy": {
          "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_FWPreminumPolicy_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-06-01",
      "name": "[parameters('networkInterfaces_vm1363_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_VM1PiP_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet1_name'), 'Subnet1')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VM1_nsg_name'))]"
      ],
      "kind": "Regular",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm1363_name')), '/ipConfigurations/ipconfig1')]",
            "etag": "W/\"087b3e44-571f-44d2-9b66-f308271ae2e4\"",
            "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
            "properties": {
              "provisioningState": "Succeeded",
              "privateIPAddress": "10.1.1.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_VM1PiP_name'))]",
                "properties": {
                  "deleteOption": "Detach"
                }
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet1_name'), 'Subnet1')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": false,
        "disableTcpStateTracking": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VM1_nsg_name'))]"
        },
        "nicType": "Standard",
        "auxiliaryMode": "None",
        "auxiliarySku": "None"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-06-01",
      "name": "[parameters('networkInterfaces_vm3629_name')]",
      "location": "westus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_VM3PiP_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet3_name'), 'Subnet3')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VM3_nsg_name'))]"
      ],
      "kind": "Regular",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm3629_name')), '/ipConfigurations/ipconfig1')]",
            "etag": "W/\"a06fa370-3ca5-4689-9cbc-22980e274d50\"",
            "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
            "properties": {
              "provisioningState": "Succeeded",
              "privateIPAddress": "10.3.1.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_VM3PiP_name'))]",
                "properties": {
                  "deleteOption": "Detach"
                }
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet3_name'), 'Subnet3')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": false,
        "disableTcpStateTracking": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VM3_nsg_name'))]"
        },
        "nicType": "Standard",
        "auxiliaryMode": "None",
        "auxiliarySku": "None"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('virtualNetworks_VNet1_name'), '/Subnet1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Subnet1_NSG_name'))]",
        "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT1_name'))]"
      ],
      "properties": {
        "addressPrefixes": [
          "10.1.1.0/24"
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Subnet1_NSG_name'))]"
        },
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT1_name'))]"
        },
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-06-01",
      "name": "[parameters('networkInterfaces_vm2834_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_VM2PiP_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'Subnet2')]",
        "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VM2_nsg_name'))]"
      ],
      "kind": "Regular",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm2834_name')), '/ipConfigurations/ipconfig1')]",
            "etag": "W/\"f8dbfff8-53f7-4ba4-8946-135115aaf7f5\"",
            "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
            "properties": {
              "provisioningState": "Succeeded",
              "privateIPAddress": "10.2.1.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_VM2PiP_name'))]",
                "properties": {
                  "deleteOption": "Detach"
                }
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'Subnet2')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4",
              "applicationSecurityGroups": [
                {
                  "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_name'))]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": false,
        "disableTcpStateTracking": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VM2_nsg_name'))]"
        },
        "nicType": "Standard",
        "auxiliaryMode": "None",
        "auxiliarySku": "None"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-06-01",
      "name": "[parameters('virtualNetworks_VNet1_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Subnet1_NSG_name'))]",
        "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT1_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet3_name'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        },
        "encryption": {
          "enabled": false,
          "enforcement": "AllowUnencrypted"
        },
        "subnets": [
          {
            "name": "AzureFirewallSubnet",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet1_name'), 'AzureFirewallSubnet')]",
            "properties": {
              "addressPrefix": "10.1.0.0/24",
              "serviceEndpoints": [],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          },
          {
            "name": "Subnet1",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet1_name'), 'Subnet1')]",
            "properties": {
              "addressPrefixes": [
                "10.1.1.0/24"
              ],
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Subnet1_NSG_name'))]"
              },
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RT1_name'))]"
              },
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ],
        "virtualNetworkPeerings": [
          {
            "name": "[concat(parameters('virtualNetworks_VNet1_name'), '-to-VNet2')]",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_VNet1_name'), concat(parameters('virtualNetworks_VNet1_name'), '-to-VNet2'))]",
            "properties": {
              "peeringState": "Connected",
              "peeringSyncLevel": "FullyInSync",
              "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
              },
              "allowVirtualNetworkAccess": true,
              "allowForwardedTraffic": false,
              "allowGatewayTransit": false,
              "useRemoteGateways": false,
              "doNotVerifyRemoteGateways": false,
              "remoteAddressSpace": {
                "addressPrefixes": [
                  "10.2.0.0/16"
                ]
              },
              "remoteVirtualNetworkAddressSpace": {
                "addressPrefixes": [
                  "10.2.0.0/16"
                ]
              }
            },
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
          },
          {
            "name": "[concat(parameters('virtualNetworks_VNet1_name'), '-to-', parameters('virtualNetworks_VNet1_name'), '3')]",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_VNet1_name'), concat(parameters('virtualNetworks_VNet1_name'), '-to-', parameters('virtualNetworks_VNet1_name'), '3'))]",
            "properties": {
              "peeringState": "Connected",
              "peeringSyncLevel": "FullyInSync",
              "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet3_name'))]"
              },
              "allowVirtualNetworkAccess": true,
              "allowForwardedTraffic": false,
              "allowGatewayTransit": false,
              "useRemoteGateways": false,
              "doNotVerifyRemoteGateways": false,
              "remoteAddressSpace": {
                "addressPrefixes": [
                  "10.3.0.0/16"
                ]
              },
              "remoteVirtualNetworkAddressSpace": {
                "addressPrefixes": [
                  "10.3.0.0/16"
                ]
              }
            },
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
          }
        ],
        "enableDdosProtection": false
      }
    }
  ]
}